/* vim: set filetype=c: */
/* AUTOGENERATED FILE, DO NOT EDIT */

/*
 * Copyright (C) 2016 Julian Aron Prenner <jap@polyadic.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#pragma once

static inline evoasm_x64_reg_type_t
evoasm_x64_get_reg_type(evoasm_x64_reg_id_t reg) {
  switch(reg) {
    case EVOASM_X64_REG_IP: return EVOASM_X64_REG_TYPE_IP;
    case EVOASM_X64_REG_RFLAGS: return EVOASM_X64_REG_TYPE_RFLAGS;
    case EVOASM_X64_REG_MXCSR: return EVOASM_X64_REG_TYPE_MXCSR;
    case EVOASM_X64_REG_A: return EVOASM_X64_REG_TYPE_GP;
    case EVOASM_X64_REG_C: return EVOASM_X64_REG_TYPE_GP;
    case EVOASM_X64_REG_D: return EVOASM_X64_REG_TYPE_GP;
    case EVOASM_X64_REG_B: return EVOASM_X64_REG_TYPE_GP;
    case EVOASM_X64_REG_SP: return EVOASM_X64_REG_TYPE_GP;
    case EVOASM_X64_REG_BP: return EVOASM_X64_REG_TYPE_GP;
    case EVOASM_X64_REG_SI: return EVOASM_X64_REG_TYPE_GP;
    case EVOASM_X64_REG_DI: return EVOASM_X64_REG_TYPE_GP;
    case EVOASM_X64_REG_8: return EVOASM_X64_REG_TYPE_GP;
    case EVOASM_X64_REG_9: return EVOASM_X64_REG_TYPE_GP;
    case EVOASM_X64_REG_10: return EVOASM_X64_REG_TYPE_GP;
    case EVOASM_X64_REG_11: return EVOASM_X64_REG_TYPE_GP;
    case EVOASM_X64_REG_12: return EVOASM_X64_REG_TYPE_GP;
    case EVOASM_X64_REG_13: return EVOASM_X64_REG_TYPE_GP;
    case EVOASM_X64_REG_14: return EVOASM_X64_REG_TYPE_GP;
    case EVOASM_X64_REG_15: return EVOASM_X64_REG_TYPE_GP;
    case EVOASM_X64_REG_MM0: return EVOASM_X64_REG_TYPE_MM;
    case EVOASM_X64_REG_MM1: return EVOASM_X64_REG_TYPE_MM;
    case EVOASM_X64_REG_MM2: return EVOASM_X64_REG_TYPE_MM;
    case EVOASM_X64_REG_MM3: return EVOASM_X64_REG_TYPE_MM;
    case EVOASM_X64_REG_MM4: return EVOASM_X64_REG_TYPE_MM;
    case EVOASM_X64_REG_MM5: return EVOASM_X64_REG_TYPE_MM;
    case EVOASM_X64_REG_MM6: return EVOASM_X64_REG_TYPE_MM;
    case EVOASM_X64_REG_MM7: return EVOASM_X64_REG_TYPE_MM;
    case EVOASM_X64_REG_XMM0: return EVOASM_X64_REG_TYPE_XMM;
    case EVOASM_X64_REG_XMM1: return EVOASM_X64_REG_TYPE_XMM;
    case EVOASM_X64_REG_XMM2: return EVOASM_X64_REG_TYPE_XMM;
    case EVOASM_X64_REG_XMM3: return EVOASM_X64_REG_TYPE_XMM;
    case EVOASM_X64_REG_XMM4: return EVOASM_X64_REG_TYPE_XMM;
    case EVOASM_X64_REG_XMM5: return EVOASM_X64_REG_TYPE_XMM;
    case EVOASM_X64_REG_XMM6: return EVOASM_X64_REG_TYPE_XMM;
    case EVOASM_X64_REG_XMM7: return EVOASM_X64_REG_TYPE_XMM;
    case EVOASM_X64_REG_XMM8: return EVOASM_X64_REG_TYPE_XMM;
    case EVOASM_X64_REG_XMM9: return EVOASM_X64_REG_TYPE_XMM;
    case EVOASM_X64_REG_XMM10: return EVOASM_X64_REG_TYPE_XMM;
    case EVOASM_X64_REG_XMM11: return EVOASM_X64_REG_TYPE_XMM;
    case EVOASM_X64_REG_XMM12: return EVOASM_X64_REG_TYPE_XMM;
    case EVOASM_X64_REG_XMM13: return EVOASM_X64_REG_TYPE_XMM;
    case EVOASM_X64_REG_XMM14: return EVOASM_X64_REG_TYPE_XMM;
    case EVOASM_X64_REG_XMM15: return EVOASM_X64_REG_TYPE_XMM;
    case EVOASM_X64_REG_ZMM16: return EVOASM_X64_REG_TYPE_ZMM;
    case EVOASM_X64_REG_ZMM17: return EVOASM_X64_REG_TYPE_ZMM;
    case EVOASM_X64_REG_ZMM18: return EVOASM_X64_REG_TYPE_ZMM;
    case EVOASM_X64_REG_ZMM19: return EVOASM_X64_REG_TYPE_ZMM;
    case EVOASM_X64_REG_ZMM20: return EVOASM_X64_REG_TYPE_ZMM;
    case EVOASM_X64_REG_ZMM21: return EVOASM_X64_REG_TYPE_ZMM;
    case EVOASM_X64_REG_ZMM22: return EVOASM_X64_REG_TYPE_ZMM;
    case EVOASM_X64_REG_ZMM23: return EVOASM_X64_REG_TYPE_ZMM;
    case EVOASM_X64_REG_ZMM24: return EVOASM_X64_REG_TYPE_ZMM;
    case EVOASM_X64_REG_ZMM25: return EVOASM_X64_REG_TYPE_ZMM;
    case EVOASM_X64_REG_ZMM26: return EVOASM_X64_REG_TYPE_ZMM;
    case EVOASM_X64_REG_ZMM27: return EVOASM_X64_REG_TYPE_ZMM;
    case EVOASM_X64_REG_ZMM28: return EVOASM_X64_REG_TYPE_ZMM;
    case EVOASM_X64_REG_ZMM29: return EVOASM_X64_REG_TYPE_ZMM;
    case EVOASM_X64_REG_ZMM30: return EVOASM_X64_REG_TYPE_ZMM;
    case EVOASM_X64_REG_ZMM31: return EVOASM_X64_REG_TYPE_ZMM;
    default: evoasm_assert_not_reached();
  }
}

evoasm_success_t
evoasm_x64_get_features(uint64_t *features);

const char *
evoasm_x64_get_reg_name(evoasm_x64_reg_id_t reg);

#define EVOASM_X64_INSTS_VAR_NAME _evoasm_x64_insts

#define EVOASM_X64_SCRATCH_REG1 EVOASM_X64_REG_14
#define EVOASM_X64_SCRATCH_REG2 EVOASM_X64_REG_15

typedef struct {
evoasm_inst_id_t inst;
int32_t imm;
} evoasm_x64_similar_inst_entry_t;

#define EVOASM_X64_MAX_SIMILAR_INSTS_PER_INST 32

extern const evoasm_x64_similar_inst_entry_t *evoasm_x64_similar_insts_absdiff;
extern const uint16_t                        *evoasm_x64_similar_inst_idxs_absdiff;
extern const evoasm_x64_similar_inst_entry_t *evoasm_x64_similar_insts_hamming;
extern const uint16_t                        *evoasm_x64_similar_inst_idxs_hamming;
